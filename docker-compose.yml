version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: vipe-dgii-postgres
    environment:
      POSTGRES_DB: vipe_dgii
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docs/dgii/schemas:/docker-entrypoint-initdb.d
    networks:
      - vipe-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d vipe_dgii"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache
  redis:
    image: redis:7-alpine
    container_name: vipe-dgii-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vipe-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API de Facturaci√≥n DGII
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: vipe-dgii-api
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: vipe_dgii
      DB_SSL: false
      JWT_SECRET: your-super-secret-jwt-key-here
      JWT_EXPIRES_IN: 1h
      DGII_ENVIRONMENT: pre-cert
      REDIS_URL: redis://redis:6379
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./certs:/app/certs
    networks:
      - vipe-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx como reverse proxy
  nginx:
    image: nginx:alpine
    container_name: vipe-dgii-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - vipe-network
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  vipe-network:
    driver: bridge
